
e
Max(A) Cost Worst           Time     Best     Time       Note
1 MaxInt = A[1]             c1          1       1           // the first index of array starts with 1, not 0 as in java
2 index = 2                 c2          1       1
3 while index ≤ n           c3          n       n           // condition is checked n-times
4   if MaxInt < A[index]    c4          n-1     n-1         // the line does not run for index  = n+1
5      MaxInt = A[index]    c5          n-1     0           // in best case, line 4 is always FALSE
6   index = index+1         c6          n-1     n-1
7 return MaxInt             c7          1       1


Worst case T(n) = c1+c2+c3*n+c4*(n-1)+c5*(n-1)+c6*(n-1)+c7 = an+b
Best case T(n) = c1+c2+c3*n+c4*(n-1)+c6*(n-1)+c7 = an+b
Therefore, the running time for the Max(A) algorithm is Θ(n)
Note that the algorithm can also be achieved by using a for loop. 